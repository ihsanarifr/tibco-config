<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/bwp/schemas/lineitem" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:ns3="http://www.tibco.com/bwp/services/creditcheckconcrete" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.tibco.com/bwp/schemas/opresult" xmlns:pfx4="http://www.tibco.com/bwp/schemas/order" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/bwp/schemas/creditcheck" xmlns:pfx2="http://www.tibco.com/pe/CheckpointSchema" xmlns:pfx="http://www.tibco.com/bwp/schemas/purchaseorder">
    <xsd:import namespace="http://www.tibco.com/bwp/schemas/purchaseorder" schemaLocation="/BWP.Core/Schema/PurchaseOrderSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/bwp/schemas/opresult" schemaLocation="/BWP.Core/Schema/OrderProcessingResult.xsd"/>
    <pd:name>BWP.Core/Services/OrderProcess/Implementation/ProcessOrder.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:PurchaseOrder"/>
    <pd:startX>67</pd:startX>
    <pd:startY>72</pd:startY>
    <pd:returnBindings>
        <pfx5:OrderProcessingResult>
            <pfx5:FileName>
                <xsl:value-of select="$OrderResult/FileName"/>
            </pfx5:FileName>
        </pfx5:OrderProcessingResult>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx5:OrderProcessingResult"/>
    <pd:endX>1103</pd:endX>
    <pd:endY>439</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:partners>
        <row>
            <partnerName>partnerCreditCheck</partnerName>
            <partnerInterfaceName>portType</partnerInterfaceName>
            <partnerInterfaceNs>http://www.tibco.com/bwp/services/creditcheckconcrete</partnerInterfaceNs>
            <partnerConfig>/BWP.Core/ShareResources/Partner Link CreditCheck.sharedpartner#CreditCheck</partnerConfig>
            <partnerInterfaceLocation>/BWP.Core/Services/CreditCheck/Contract/CreditCheckService_ConcreteWSDL.wsdl</partnerInterfaceLocation>
        </row>
    </pd:partners>
    <pd:targetNamespace>http://xmlns.example.com/1515464551129</pd:targetNamespace>
    <pd:activity name="Compute OrderID and Price">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>225</pd:x>
        <pd:y>79</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="OrderID" type="xsd:string"/>
                            <xsd:element name="TotalPrice" type="xsd:decimal"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <OrderID>
                    <xsl:value-of select="concat(&quot;TIB-&quot;,string($_processContext/ns:ProcessContext/ProcessId),&quot;-&quot;,tib:format-dateTime(&quot;yyyyMMddHHmmSS&quot;,current-dateTime()))"/>
                </OrderID>
                <TotalPrice>
                    <xsl:value-of select="sum(for $orderline in $Start/pfx:PurchaseOrder/pfx:LineItem return $orderline/pfx:Quantity * $orderline/pfx:UnitPrice)"/>
                </TotalPrice>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log Price">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>362</pd:x>
        <pd:y>72</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&quot;Order ID: &quot;,$Compute-OrderID-and-Price/root/OrderID,&quot;; &quot;,&quot;Total Price: &quot;,$Compute-OrderID-and-Price/root/TotalPrice)"/>
                </message>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Checkpoint">
        <pd:type>com.tibco.pe.core.CheckpointActivity</pd:type>
        <pd:resourceType>ae.process.checkpoint</pd:resourceType>
        <pd:x>508</pd:x>
        <pd:y>71</pd:y>
        <config/>
        <pd:inputBindings>
            <pfx2:input/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Invoke CreditCheck Service">
        <pd:type>com.tibco.ae.tools.palettes.servicepalette.activities.InvokePartnerActivity</pd:type>
        <pd:resourceType>service.activity.invokePartner</pd:resourceType>
        <pd:x>85</pd:x>
        <pd:y>187</pd:y>
        <config>
            <partner>partnerCreditCheck</partner>
            <operation>PerformCreditCheckOp</operation>
        </config>
        <pd:inputBindings>
            <ns3:CreditCheckRequest>
                <parameters>
                    <pfx3:CreditCheckRequest>
                        <pfx3:Amount>
                            <xsl:value-of select="$Compute-OrderID-and-Price/root/TotalPrice"/>
                        </pfx3:Amount>
                        <pfx3:AccountID>
                            <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:CustomerID"/>
                        </pfx3:AccountID>
                    </pfx3:CreditCheckRequest>
                </parameters>
            </ns3:CreditCheckRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Credit Check Failed">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>240</pd:x>
        <pd:y>395</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Credit Request Rejected">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>329</pd:x>
        <pd:y>270</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ProcessInventory">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>414</pd:x>
        <pd:y>180</pd:y>
        <config>
            <processName>/BWP.Core/Services/OrderProcess/Implementation/ProcessInventory.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$Start/pfx:PurchaseOrder"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Compute Order Status">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>597</pd:x>
        <pd:y>187</pd:y>
        <config>
            <element>
                <xsd:element name="Root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="OrderStatus" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <Root>
                <OrderStatus>
                    <xsl:value-of select="if(exists($ProcessInventory/ns1:LineItems/ns1:Item[ns1:ItemStatus='Back Order'])) then &quot;NOT READY&quot; else &quot;READY&quot;"/>
                </OrderStatus>
            </Root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Compute LineItem Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>759</pd:x>
        <pd:y>187</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="LineItemData" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="ItemID" type="xsd:string"/>
                                        <xsd:element name="ItemDesc" type="xsd:string"/>
                                        <xsd:element name="Quantity" type="xsd:int"/>
                                        <xsd:element name="Status" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$Start/pfx:PurchaseOrder/pfx:LineItem">
                    <xsl:variable name="position" select="position()"/>
                    <xsl:variable name="item" select="$ProcessInventory/ns1:LineItems/ns1:Item[$position]"/>
                    <LineItemData>
                        <ItemID>
                            <xsl:value-of select="$item/ns1:ItemID"/>
                        </ItemID>
                        <ItemDesc>
                            <xsl:value-of select="$item/ns1:ItemDesc"/>
                        </ItemDesc>
                        <Quantity>
                            <xsl:value-of select="pfx:Quantity"/>
                        </Quantity>
                        <Status>
                            <xsl:value-of select="$item/ns1:ItemStatus"/>
                        </Status>
                    </LineItemData>
                </xsl:for-each>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="OrderResult">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>873</pd:x>
        <pd:y>440</pd:y>
        <config>
            <processName>/BWP.Core/Services/OrderProcess/Implementation/OrderResult.process</processName>
        </config>
        <pd:inputBindings>
            <pfx4:Order>
                <pfx4:OrderID>
                    <xsl:value-of select="$Compute-OrderID-and-Price/root/OrderID"/>
                </pfx4:OrderID>
                <pfx4:CustomerID>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:CustomerID"/>
                </pfx4:CustomerID>
                <pfx4:TotalPrice>
                    <xsl:value-of select="$Compute-OrderID-and-Price/root/TotalPrice"/>
                </pfx4:TotalPrice>
                <pfx4:OrderStatus>
                    <xsl:value-of select="if($Compute-Order-Status/Root/OrderStatus) then&#xA;$Compute-Order-Status/Root/OrderStatus&#xA;else&#xA;&quot;Rejected&quot;"/>
                </pfx4:OrderStatus>
                <xsl:choose>
                    <xsl:when test="$_error">
                        <pfx4:CreditStatus>
                            <xsl:value-of select="&quot;Failed&quot;"/>
                        </pfx4:CreditStatus>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx4:CreditStatus>
                            <xsl:value-of select="$Invoke-CreditCheck-Service/ns3:CreditCheckResult/parameters/pfx3:CreditCheckResult/pfx3:Status"/>
                        </pfx4:CreditStatus>
                    </xsl:otherwise>
                </xsl:choose>
                <pfx4:OrderDate>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:OrderDate"/>
                </pfx4:OrderDate>
                <pfx4:ShipmentDate>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:ShipmentDate"/>
                </pfx4:ShipmentDate>
                <pfx4:ShipmentLocation>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:ShipmentLocation"/>
                </pfx4:ShipmentLocation>
                <pfx4:DeliveryMethod>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:DeliveryMethod"/>
                </pfx4:DeliveryMethod>
                <pfx4:Priority>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:Priority"/>
                </pfx4:Priority>
                <xsl:choose>
                    <xsl:when test="exists($Compute-LineItem-Data/root/LineItemData)">
                        <xsl:for-each select="$Compute-LineItem-Data/root/LineItemData">
                            <pfx4:OrderItems>
                                <pfx4:ItemID>
                                    <xsl:value-of select="ItemID"/>
                                </pfx4:ItemID>
                                <pfx4:ItemDesc>
                                    <xsl:value-of select="ItemDesc"/>
                                </pfx4:ItemDesc>
                                <pfx4:Quantity>
                                    <xsl:value-of select="Quantity"/>
                                </pfx4:Quantity>
                                <pfx4:Status>
                                    <xsl:value-of select="Status"/>
                                </pfx4:Status>
                            </pfx4:OrderItems>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$Start/pfx:PurchaseOrder/pfx:LineItem">
                            <pfx4:OrderItems>
                                <pfx4:ItemID>
                                    <xsl:value-of select="pfx:Item"/>
                                </pfx4:ItemID>
                                <pfx4:ItemDesc>
                                    <xsl:value-of select="&quot;N/A&quot;"/>
                                </pfx4:ItemDesc>
                                <pfx4:Quantity>
                                    <xsl:value-of select="pfx:Quantity"/>
                                </pfx4:Quantity>
                                <pfx4:UnitPrice>
                                    <xsl:value-of select="pfx:UnitPrice"/>
                                </pfx4:UnitPrice>
                                <pfx4:Status>
                                    <xsl:value-of select="&quot;N/A&quot;"/>
                                </pfx4:Status>
                            </pfx4:OrderItems>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx4:Order>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Store Order (insert sales_order)">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>697</pd:x>
        <pd:y>351</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/BWP.Core/Connections/OrderDB.sharedjdbc</jdbcSharedConfig>
            <statement>INSERT INTO SALES_ORDER(
ORDER_ID,
CUSTOMER_ID,
ORDER_DATE,
SHIPMENT_DATE,
SHIPMENT_LOCATION,
TOTAL_AMOUNT,
DELIVERY_METHOD,
PRIORITY,
STATUS
) VALUES(?,?,?,?,?,?,?,?,?)</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>ORDER_ID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CUSTOMER_ID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ORDER_DATE</parameterName>
                    <dataType>DATE</dataType>
                </parameter>
                <parameter>
                    <parameterName>SHIPMENT_DATE</parameterName>
                    <dataType>DATE</dataType>
                </parameter>
                <parameter>
                    <parameterName>SHIPMENT_LOCATION</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TOTAL_AMOUNT</parameterName>
                    <dataType>DOUBLE</dataType>
                </parameter>
                <parameter>
                    <parameterName>DELIVERY_METHOD</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>PRIORITY</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>STATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <ORDER_ID>
                    <xsl:value-of select="$Compute-OrderID-and-Price/root/OrderID"/>
                </ORDER_ID>
                <CUSTOMER_ID>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:CustomerID"/>
                </CUSTOMER_ID>
                <ORDER_DATE>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:OrderDate"/>
                </ORDER_DATE>
                <SHIPMENT_DATE>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:ShipmentDate"/>
                </SHIPMENT_DATE>
                <SHIPMENT_LOCATION>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:ShipmentLocation"/>
                </SHIPMENT_LOCATION>
                <TOTAL_AMOUNT>
                    <xsl:value-of select="$Compute-OrderID-and-Price/root/TotalPrice"/>
                </TOTAL_AMOUNT>
                <DELIVERY_METHOD>
                    <xsl:value-of select="$Start/pfx:PurchaseOrder/pfx:DeliveryMethod"/>
                </DELIVERY_METHOD>
                <xsl:choose>
                    <xsl:when test="$Start/pfx:PurchaseOrder/pfx:Priority = &quot;High&quot;">
                        <PRIORITY>
                            <xsl:value-of select="&quot;Y&quot;"/>
                        </PRIORITY>
                    </xsl:when>
                    <xsl:otherwise>
                        <PRIORITY>
                            <xsl:value-of select="&quot;N&quot;"/>
                        </PRIORITY>
                    </xsl:otherwise>
                </xsl:choose>
                <STATUS>
                    <xsl:value-of select="$Compute-Order-Status/Root/OrderStatus"/>
                </STATUS>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Insert Order Detail">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>870</pd:x>
        <pd:y>85</pd:y>
        <pd:width>229</pd:width>
        <pd:height>176</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Compute-LineItem-Data/root/LineItemData</pd:over>
            <pd:iterationElementSlot>currentOrder</pd:iterationElementSlot>
            <pd:indexSlot>indexOrder</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Store Order (insert order_detail)</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Store Order (insert order_detail)</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Store Order (insert order_detail)">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>980</pd:x>
            <pd:y>170</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/BWP.Core/Connections/OrderDB.sharedjdbc</jdbcSharedConfig>
                <statement>INSERT INTO ORDER_DETAIL
 (ORDER_ID,ITEM_ID,QUANTITY,STATUS) 
 VALUES (?,?,?,?)</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>ORDER_ID</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>ITEM_ID</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>QUANTITY</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>STATUS</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <ORDER_ID>
                        <xsl:value-of select="$Compute-OrderID-and-Price/root/OrderID"/>
                    </ORDER_ID>
                    <ITEM_ID>
                        <xsl:value-of select="$currentOrder/LineItemData/ItemID"/>
                    </ITEM_ID>
                    <QUANTITY>
                        <xsl:value-of select="number($currentOrder/LineItemData/Quantity)"/>
                    </QUANTITY>
                    <STATUS>
                        <xsl:value-of select="$currentOrder/LineItemData/Status"/>
                    </STATUS>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Compute OrderID and Price</pd:from>
        <pd:to>Log Price</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Price</pd:from>
        <pd:to>Checkpoint</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Checkpoint</pd:from>
        <pd:to>Invoke CreditCheck Service</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke CreditCheck Service</pd:from>
        <pd:to>Credit Check Failed</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke CreditCheck Service</pd:from>
        <pd:to>Credit Request Rejected</pd:to>
        <pd:xpathDescription>Rejected</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke CreditCheck Service</pd:from>
        <pd:to>ProcessInventory</pd:to>
        <pd:xpathDescription>Accepted</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Invoke-CreditCheck-Service/ns3:CreditCheckResult/parameters/pfx3:CreditCheckResult/pfx3:Status = "Accepted"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ProcessInventory</pd:from>
        <pd:to>Compute Order Status</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Compute Order Status</pd:from>
        <pd:to>Compute LineItem Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Compute OrderID and Price</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Credit Request Rejected</pd:from>
        <pd:to>OrderResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Credit Check Failed</pd:from>
        <pd:to>OrderResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>OrderResult</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Compute LineItem Data</pd:from>
        <pd:to>Store Order (insert sales_order)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Compute LineItem Data</pd:from>
        <pd:to>Insert Order Detail</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Insert Order Detail</pd:from>
        <pd:to>OrderResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Store Order (insert sales_order)</pd:from>
        <pd:to>OrderResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>